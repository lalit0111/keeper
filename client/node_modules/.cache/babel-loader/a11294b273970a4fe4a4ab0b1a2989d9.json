{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91950\\\\Desktop\\\\keeper\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport InputNote from \"./components/InputNote\";\nimport * as api from \"./api/api.js\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const getPosts = () => async () => {\n    try {\n      const notes = await api.fetchNotes();\n      return notes;\n    } catch (error) {}\n\n    return null;\n  };\n\n  const [notesState, update] = useState(getPosts);\n\n  function createNotes(note) {\n    return /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 300,\n      classNames: \"item\",\n      children: /*#__PURE__*/_jsxDEV(Note, {\n        id: note.key,\n        title: note.title,\n        content: note.content,\n        deleteNote: deleteNote\n      }, note.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, note.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  function deleteNote(id) {\n    update(prevNotes => {\n      return prevNotes.filter(currentNote => {\n        return id !== currentNote.key;\n      });\n    });\n  }\n\n  function addNote(title, content) {\n    var keyVal = notesState.length;\n    var newNote = {\n      key: [keyVal],\n      title: [title],\n      content: [content]\n    };\n    update(prevNotes => {\n      return [newNote, ...prevNotes];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(InputNote, {\n        add: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: notesState.map(createNotes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qfE55+vQoTxdzIOfqEDLSc9InJ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/91950/Desktop/keeper/client/src/App.jsx"],"names":["React","useState","Header","Footer","Note","InputNote","api","TransitionGroup","CSSTransition","App","getPosts","notes","fetchNotes","error","notesState","update","createNotes","note","key","title","content","deleteNote","id","prevNotes","filter","currentNote","addNote","keyVal","length","newNote","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAG,MAAM,YAAY;AACjC,QAAI;AACF,YAAMC,KAAK,GAAG,MAAML,GAAG,CAACM,UAAJ,EAApB;AACA,aAAOD,KAAP;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc,CAAE;;AAClB,WAAO,IAAP;AACD,GAND;;AAQA,QAAM,CAACC,UAAD,EAAaC,MAAb,IAAuBd,QAAQ,CAACS,QAAD,CAArC;;AAEA,WAASM,WAAT,CAAqBC,IAArB,EAA2B;AACzB,wBACE,QAAC,aAAD;AAA8B,MAAA,OAAO,EAAE,GAAvC;AAA4C,MAAA,UAAU,EAAC,MAAvD;AAAA,6BACE,QAAC,IAAD;AAEE,QAAA,EAAE,EAAEA,IAAI,CAACC,GAFX;AAGE,QAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,QAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,QAAA,UAAU,EAAEC;AALd,SACOJ,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAoBD,IAAI,CAACC,GAAzB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,WAASG,UAAT,CAAoBC,EAApB,EAAwB;AACtBP,IAAAA,MAAM,CAAEQ,SAAD,IAAe;AACpB,aAAOA,SAAS,CAACC,MAAV,CAAkBC,WAAD,IAAiB;AACvC,eAAOH,EAAE,KAAKG,WAAW,CAACP,GAA1B;AACD,OAFM,CAAP;AAGD,KAJK,CAAN;AAKD;;AAED,WAASQ,OAAT,CAAiBP,KAAjB,EAAwBC,OAAxB,EAAiC;AAC/B,QAAIO,MAAM,GAAGb,UAAU,CAACc,MAAxB;AACA,QAAIC,OAAO,GAAG;AACZX,MAAAA,GAAG,EAAE,CAACS,MAAD,CADO;AAEZR,MAAAA,KAAK,EAAE,CAACA,KAAD,CAFK;AAGZC,MAAAA,OAAO,EAAE,CAACA,OAAD;AAHG,KAAd;AAMAL,IAAAA,MAAM,CAAEQ,SAAD,IAAe;AACpB,aAAO,CAACM,OAAD,EAAU,GAAGN,SAAb,CAAP;AACD,KAFK,CAAN;AAGD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEG;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAA,kBAAkBZ,UAAU,CAACgB,GAAX,CAAed,WAAf;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxDQP,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Note from \"./components/Note\";\r\nimport InputNote from \"./components/InputNote\";\r\nimport * as api from \"./api/api.js\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction App() {\r\n  const getPosts = () => async () => {\r\n    try {\r\n      const notes = await api.fetchNotes();\r\n      return notes;\r\n    } catch (error) {}\r\n    return null;\r\n  };\r\n\r\n  const [notesState, update] = useState(getPosts);\r\n\r\n  function createNotes(note) {\r\n    return (\r\n      <CSSTransition key={note.key} timeout={300} classNames=\"item\">\r\n        <Note\r\n          key={note.key}\r\n          id={note.key}\r\n          title={note.title}\r\n          content={note.content}\r\n          deleteNote={deleteNote}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  }\r\n\r\n  function deleteNote(id) {\r\n    update((prevNotes) => {\r\n      return prevNotes.filter((currentNote) => {\r\n        return id !== currentNote.key;\r\n      });\r\n    });\r\n  }\r\n\r\n  function addNote(title, content) {\r\n    var keyVal = notesState.length;\r\n    var newNote = {\r\n      key: [keyVal],\r\n      title: [title],\r\n      content: [content],\r\n    };\r\n\r\n    update((prevNotes) => {\r\n      return [newNote, ...prevNotes];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"grid\">\r\n        <InputNote add={addNote} />\r\n        <TransitionGroup>{notesState.map(createNotes)}</TransitionGroup>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}