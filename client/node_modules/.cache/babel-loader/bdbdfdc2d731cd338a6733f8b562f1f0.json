{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91950\\\\Desktop\\\\keeper\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport InputNote from \"./components/InputNote\";\nimport * as api from \"./api/api.js\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notesState, update] = useState(getNotes());\n\n  async function postNote(note) {\n    try {\n      await api.postNote({\n        key: note.key,\n        title: note.title,\n        content: note.content\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  async function getNotes() {\n    try {\n      const response = await api.fetchNotes();\n      return response.data;\n    } catch (error) {}\n  }\n\n  async function deleteNoteFromDb(key) {\n    try {\n      await api.deleteNote(key);\n    } catch (error) {}\n  }\n\n  function createNotes(note) {\n    return /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 300,\n      classNames: \"item\",\n      children: /*#__PURE__*/_jsxDEV(Note, {\n        id: note.key,\n        title: note.title,\n        content: note.content,\n        deleteNote: deleteNote\n      }, note.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, note.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  function deleteNote(id) {\n    deleteNoteFromDb(id);\n    update(prevNotes => {\n      return prevNotes.filter(currentNote => {\n        return id !== currentNote.key;\n      });\n    });\n  }\n\n  function addNote(title, content) {\n    var keyVal = notesState.length;\n    var newNote = {\n      key: keyVal,\n      title: title,\n      content: content\n    };\n    console.log(newNote);\n    postNote(newNote);\n    update(prevNotes => {\n      return [newNote, ...prevNotes];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(InputNote, {\n        add: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: notesState.map(createNotes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KoxzPOCxoNYUA/HkBlI1n7CiZrE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/91950/Desktop/keeper/client/src/App.jsx"],"names":["React","useState","Header","Footer","Note","InputNote","api","TransitionGroup","CSSTransition","App","notesState","update","getNotes","postNote","note","key","title","content","error","console","log","message","response","fetchNotes","data","deleteNoteFromDb","deleteNote","createNotes","id","prevNotes","filter","currentNote","addNote","keyVal","length","newNote","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Note from \"./components/Note\";\r\nimport InputNote from \"./components/InputNote\";\r\nimport * as api from \"./api/api.js\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction App() {\r\n  const [notesState, update] = useState(getNotes());\r\n\r\n  async function postNote(note) {\r\n    try {\r\n      await api.postNote({\r\n        key: note.key,\r\n        title: note.title,\r\n        content: note.content\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  async function getNotes() {\r\n    try {\r\n      const response = await api.fetchNotes();\r\n      return response.data;\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function deleteNoteFromDb(key) {\r\n    try {\r\n      await api.deleteNote(key);\r\n    } catch (error) {}\r\n  }\r\n\r\n  function createNotes(note) {\r\n    return (\r\n      <CSSTransition key={note.key} timeout={300} classNames=\"item\">\r\n        <Note\r\n          key={note.key}\r\n          id={note.key}\r\n          title={note.title}\r\n          content={note.content}\r\n          deleteNote={deleteNote}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  }\r\n\r\n  function deleteNote(id) {\r\n    deleteNoteFromDb(id);\r\n    update((prevNotes) => {\r\n      return prevNotes.filter((currentNote) => {\r\n        return id !== currentNote.key;\r\n      });\r\n    });\r\n  }\r\n\r\n  function addNote(title, content) {\r\n    var keyVal = notesState.length;\r\n    var newNote = {\r\n      key: keyVal,\r\n      title: title,\r\n      content: content\r\n    };\r\n\r\n    console.log(newNote);\r\n\r\n    postNote(newNote);\r\n\r\n    update((prevNotes) => {\r\n      return [newNote, ...prevNotes];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"grid\">\r\n        <InputNote add={addNote} />\r\n        <TransitionGroup>{notesState.map(createNotes)}</TransitionGroup>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}